<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <link rel="stylesheet" href="/stylesheets/style.css">
</head>
<body>
    <div class="container">
        <div class="card mt-5">
            <div class="card-header text-center">
                <h2>MongoDB BREADS(Browse, Read, Edit, Add, Delete, Sorting)</h2>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-2 mb-3 mb-md-0">
                        <div class="input-group">
                            <span class="input-group-text">Show</span>
                            <select class="form-control text-center" id="limit" name="limit">
                                <option value="5">5</option>
                                <option value="10">10</option>
                                <option value="all">all</option>
                            </select>
                            <span class="input-group-text">entries</span>
                        </div>
                    </div>
                    <div class="col-md-9 mb-3">
                        <div class="input-group">
                            <input type="text" class="form-control" id="search" name="search" placeholder="Search">
                            <button type="submit" class="btn btn-info"><i class="fa-solid fa-magnifying-glass"></i></button>
                            <button type="button" class="btn btn-warning" onclick="window.location.href='/todos';"><i class="fa-solid fa-arrows-rotate"></i></button>
                        </div>
                    </div>
                </div>
            </div>
            <div class="card-footer">
                <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal"><i class="fa-solid fa-plus"></i>
                </button>
                <ul class="pagination m-0">
                    <li class="page-item">
                        <a class="page-link" href="#" aria-label="Previous">
                            <span aria-hidden="true">&laquo;</span>
                        </a>
                    </li>
                    <li class="page-item"><a class="page-link" href="#">1</a></li>
                    <li class="page-item"><a class="page-link" href="#">2</a></li>
                    <li class="page-item"><a class="page-link" href="#">3</a></li>
                    <li class="page-item">
                        <a class="page-link" href="#" aria-label="Next">
                            <span aria-hidden="true">&raquo;</span>
                        </a>
                    </li>
                </ul>
                <table>
                    <thead></thead>
                    <tbody id="users-tbody"></tbody>
                </table>
            </div>
            <div class="modal-fade"id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="users-content"></div>
                    <form id="add-form">
                        <div class="modal-header">
                            <h1 class="modal-title fs-5" id="exampleModalLabel">User Form</h1>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                            <button type="button" class="btn btn-primary">Save changes</button>
                        </div>
                    </form>
                </div>
            </div>
            <script>
                const readData = async () => {
                    try {
                        const response = await fetch('http://localhost:3000/');
                        const data = await response.json();
                        let html = '';
                        data.data.forEach((item, index) => { 
                            html += `
                                <tr>
                                    <th scope="row">${index + data.offset +1}</th>
                                    <td>${item.Name}</td>
                                    <td>${item.Phone}</td>
                                    <td>${item.Actions}</td>
                                </tr>
                            `;
                        });
                        document.getElementById('users-tbody').innerHTML = html;
                    } catch (error) {
                        console.error("Error:", error);
                    }
                };

                document.getElementById('add-form').addEventListener('submit', async (event) => {
                    event.preventDefault();
                    const name = document.getElementById('name').value;
                    const phone = document.getElementById('phone').value;
                    try {
                        const response = await fetch('http://localhost:3000/', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({
                                name: name,
                                phone: phone
                            })
                        });
                        const data = await response.json();
                        readData();
                    } catch (error) {
                        console.error("Error:", error);
                    }
                })
                readData();
            </script>
        </div>
    </div>

