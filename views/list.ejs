<%- include('partial/header.ejs') %>

<body>
    <div class="container">
        <div class="card mt-5">
            <div class="card-header text-center">
                <h2>MongoDB BREADS(Browse, Read, Edit, Add, Delete, Sorting)</h2>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-2 mb-3 mb-md-0">
                        <div class="input-group">
                            <span class="input-group-text">Show</span>
                            <select class="form-control text-center" id="u-limit" name="u-limit">
                                <option value="5">5</option>
                                <option value="10">10</option>
                                <option value="all">all</option>
                            </select>
                            <span class="input-group-text">entries</span>
                        </div>
                    </div>
                    <div class="col-md-9 mb-3">
                        <div class="input-group">
                            <input type="text" class="form-control" id="search" name="search" placeholder="Search">
                            <button type="submit" class="btn btn-info"><i class="fa-solid fa-magnifying-glass"></i></button>
                            <button type="button" class="btn btn-warning" onclick="window.location.href='/todos';"><i class="fa-solid fa-arrows-rotate"></i></button>
                        </div>
                    </div>
                </div>
            </div>
            <div class="table-data"></div>
            <table class="table table-striped">
              <thead>
                <tr>
                  <th scope="col" class="col-md-1 align-middle px-2">
                    <span>No.</span>
                  </th>
                  <th scope="col" class="col-md-3 align-middle px-2" id="s-name">
                    <span><i class="fa-solid fa-sort me-2"></i>Name</span>
                  </th>
                  <th scope="col" class="col-md-3 align-middle px-2" id="s-phone">
                    <span><i class="fa-solid fa-sort me-2"></i>Phone</span>
                  </th>
                  <th scope="col" class="col-md-2 align-middle px-2">
                    <span>Actions</span>
                  </th>
                </tr>
              </thead>
              <tbody id="users-tbody">
              </tbody>
          </table>
          <div class="card-footer">
            <button type="button" class="btn btn-primary" id="form-modal-btn" data-bs-toggle="modal" data-bs-target="#form-Modal"><i class="fa-solid fa-plus"></i></button>
            <ul class="pagination m-0 float-end">
              <li class="page-item">
                        <a class="page-link" href="#" aria-label="Previous">
                            <span aria-hidden="true">&laquo;</span>
                        </a>
                    </li>
                    <li class="page-item"><a class="page-link" href="#">1</a></li>
                    <li class="page-item"><a class="page-link" href="#">2</a></li>
                    <li class="page-item"><a class="page-link" href="#">3</a></li>
                    <li class="page-item">
                        <a class="page-link" href="#" aria-label="Next">
                            <span aria-hidden="true">&raquo;</span>
                        </a>
                    </li>
                </ul>
            </div>
            <div class="modal fade" id="form-Modal" tabindex="-1" aria-labelledby="form-ModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <form id="users-form">
                            <div class="modal-header">
                                <h1 class="modal-title fs-5" id="form-ModalLabel">User Form</h1>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                                <div class="mb-3">
                                    <label for="name" class="form-label" >Name</label>
                                    <input type="text" class="form-control" id="name" name="name">
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="number" class="form-control" id="phone" name="phone">
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                <button type="submit" class="btn btn-primary">Save changes</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
            <script>
              let params =  {
                page: 1,
                sortBy: 'id',
                sortMode: 'desc',
                limit: 10
              }

          

              document.getElementById('add-form').addEventListener('submit', async (event) => {
                event.preventDefault();
                const phone = document.getElementById('phone').value;
                const name = document.getElementById('name`').value;
                params = {...params, phone, name}
              }
              
                
                const createData = async (name, phone) => {
                  try{
                    const response = await fetch('http://localhost:3000/users', {
                      method: 'POST',
                      body: JSON.stringify({
                        name: name,
                        phone: phone
                      })
                    });
                    const result = await response.json();
                    readData();
                    console.log('success', result);
                  } catch (error) {
                    console.error("Error:", error);
                  }
                }

                document.getElementById('add-form').addEventListener('submit', async (event) => {
                    event.preventDefault();
                    const name = document.getElementById('name').value;
                    const phone = document.getElementById('phone').value;
                    createData(name, phone);
                    formModal.hide();
                    try {
                        const response = await fetch('http://localhost:3000/users:id', {
                            method: 'POST',
                            body: JSON.stringify({
                                name: name,
                                phone: phone
                            })
                        });
                        const data = await response.json();
                        readData();
                    } catch (error) {
                        console.error("Error:", error);
                    }
                    const formModal = new bootstrap.Modal('#form-Modal',{
                      keyboard : false
                    });
                    formModal.hide();
                })
                document.getElementById('form-modal').addEventListener('submit', (e) => {
                    e.preventDefault();
                    const name = document.getElementById('name').value;
                    const phone = document.getElementById('phone').value;
                    formModal('hide');
                    const id = document.getElementById('id').value;
                    fetch('http://localhost:3000/users/' + id, {
                        method: 'PUT',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            name: name,
                            phone: phone
                        })
                    }).then(response => response.json())
                })
                const readData = async () => {
                    try {
                        const url = new URL('http://localhost:3000/users')
                        url.search = new URLSearchParams(params);
                        const response = await fetch(url);
                        const result = await response.json();
                        console.log('success', result); 
                        let html = '';
                        result.data.forEach((item, index) => { 
                            html += `
                                <tr>
                                    <th scope="row">${index + result.offset + 1}</th>
                                    <td>${item.Name}</td>
                                    <td>${item.Phone}</td>
                                    <td>${item.Actions}</td>
                                    <td><a href=/users/${item.id} class="btn btn-primary btn-sm"><i class="fa-solid fa-pencil"></i></a>
                                        <a href=/users/${item.id} class="btn btn-danger btn-sm"><i class="fa-solid fa-trash"></i></a>
                                    </td>
                                </tr>
                            `;
                        });
                        document.getElementById('users-tbody').innerHTML = html;
                    } catch (error) {
                        console.error("Error:", error);
                    }
                }
                window.onload = () => {
                  readData();
                }
            </script>
        </div>
    </div>

    <%- include('partial/footer.ejs') %>
