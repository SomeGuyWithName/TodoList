<%- include('partial/header.ejs') %>
    <div class="container">
        <!-- FOR SEARCHING -->
        <div class="card mt-5">
            <div class="card-header d-flex justify-content-between">
                <a class="btn btn-secondary" href="/" role="button"><i class="fa-solid fa-door-open"></i></a>
                <h3 class="mb-0 card-title text-center flex-grow-1">Todo List</h3>
            </div>
            <div class="card-body">
                <div class="row mb-3">
                    <label for="searchtitle" class="col-sm-2 col-form-label">Title</label>
                    <div class="col-sm-10">
                        <input type="text" class="form-control" id="searchtitle" placeholder="Title" name="searchtitle">
                    </div>
                </div>
                <div class="form-group row align-items-center mb-3">
                    <label for="deadlineStart" class="col-sm-2 col-form-label">Deadline</label>
                    <div class="col-sm-4">
                        <input type="datetime-local" class="form-control" name="deadlineStart" id="deadlineStart"
                            max="2024-12-31">
                    </div>
                    <div class="col-sm-1 text-center"> s.d. </div>
                    <div class="col-sm-12 col-md-10 col-lg-5 align-self-center ">
                        <input type="datetime-local" class="form-control" name="deadlineEnd" id="deadlineEnd"
                            max="2024-12-31">
                    </div>
                </div>
                <div class="mb-3 row">
                    <label for="searchcomplete" class="col-sm-2 col-form-label">Complete</label>
                    <div class="col-sm-10">
                        <select class="form-select" name="searchcomplete" id="searchcomplete">
                            <option disabled selected>-select complete-</option>
                            <option value="true">Done</option>
                            <option value="false">Not Yet</option>
                        </select>
                    </div>
                </div>
                <div class="d-flex justify-content-start align-items-center gap-2 mt-3">
                    <button type="button" id="sortButton" class="btn btn-success">
                        <i class="fa-solid fa-sort me-2"></i>Sort by deadline
                    </button>
                    <button type="button" id="resetButton" class="btn btn-warning">
                        <i class="fa-solid fa-rotate"></i>
                    </button>
                    <button type="button" id="searchButton" class="btn btn-info">
                        <i class="fa-solid fa-magnifying-glass"></i>
                    </button>
                </div>
            </div>
            <hr class="m-0">
            <div class="bg-light px-3 py-2">
                <div class="input-group">
                    <input type="text" class="form-control" id="addTitle" placeholder="Add Title">
                    <button type="button" id="addButton" class="btn btn-outline-primary">
                        <i class="fa-solid fa-circle-down"></i>
                    </button>
                </div>
            </div>
            <ul class="list-group p-0" id="listTodo">
                <!-- DATA TODOS -->
            </ul>
        </div>
    </div>



    <!-- MODAL -->
    <div class="modal fade" id="form-Modal" tabindex="-1" aria-labelledby="form-ModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="form-ModalLabel">Todos Form</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" id="todoForm">
                    <div id="modal-message">
                        <!-- EDIT FORM -->
                        <div id="todos-edit">
                            <div class="row mb-3">
                                <label for="title" class="col-sm-2 col-form-label">Title</label>
                                <div class="col-sm-9">
                                    <input type="text" class="form-control" id="title">
                                </div>
                            </div>
                            <div class="row mb-3">
                                <div class="col-12 col-md-2 col-me-4 col-form-label">
                                    <label for="deadline">Deadline</label>
                                </div>
                                <div class="col-sm-9">
                                    <input type="datetime-local" class="form-control" id="deadline">
                                </div>
                            </div>
                            <div class="row mb-3 mt-2">
                                <div class="col-12 col-md-2 col-form-label">
                                    <label for="complete">Complete</label>
                                </div>
                                <div class="col-12 col-md-6 align-self-center">
                                    <input type="checkbox" class="form-check-input" id="complete">
                                    <label for="complete" class="form-check-label">Done</label>
                                </div>
                            </div>
                        </div>
                        <div id="todos-delete" class="d-none">
                            <p>are you sure you want to delete '<span id="deleteTodo"></span>'?</p>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">No</button>
                    <button type="submit" class="btn btn-primary" id="modalcontent">Save changes</button>
                </div>
            </div>
        </div>
    </div>


    <script>
        let params = {
            page: 1,
            limit: 10,
            title: "",
            complete: "",
            startDeadline: "",
            endDateDeadline: "",
            sortBy: '_id',
            sortMode: 'desc',
            executor: "<%= userId %>",
        }

        const listTodo = $('#listTodo');
        const addTitle = $('#addTitle');
        const addButton = $('#addButton');
        const searchtitle = $('#searchtitle');
        const deadlineStart = $('#deadlineStart');
        const deadlineEnd = $('#deadlineEnd');
        const deadline = $('#deadline');
        const searchcomplete = $('#searchcomplete');
        const searchButton = $('#searchButton');
        const todosDelete = $('#todos-delete');
        const deleteMessage = $('#deleteTodo');
        const sortButton = $('#sortButton');
        const resetButton = $('#resetButton');
        const todoModal = new bootstrap.Modal($('#form-Modal'));
        const todoForm = $('#todoForm');
        const modalContent = $('#modalcontent');
        const modalDelete = $('#modalDelete');
        const modalmessage = $('#modal-message');
        const formMessage = $('#form-message');

        let endpointApi = `/todos/`
        let renderData = false;
        let viewData = true;

        const queryParams = (param) => {
            let query = `?executor=${param.executor}&page=${param.page}&limit=${param.limit}&sortBy=${param.sortBy}&sortMode=${param.sortMode}`;
            if (param.title) query += `&title=${param.title}`;
            if (param.complete !== undefined) query += `&complete=${param.complete}`;
            if (param.startDeadline) query += `&startDeadline=${new Date(param.startDeadline).toISOString()}`;
            if (param.endDateDeadline) query += `&endDateDeadline=${new Date(param.endDateDeadline).toISOString()}`;
            return query
        }

        const fetchTodos = () => {
            const queryString = queryParams(params);
            const endpointFetchApi = endpointApi + queryString
            return $.ajax({
                url: endpointFetchApi,
                method: "GET",
                dataType: "json",
            })
        }

        const renderTodos = (isAppend = false) => {
            if (!isAppend) listTodo.empty();
            fetchTodos().done(function (todos) {
                if (todos.data.length === 0) {
                    viewData = true;
                    return;
                }
                console.log(todos);
                todos.data.forEach(todo => {
                    const now = moment();
                    const date = moment(todo.deadline);
                    const formatDate = date.format('DD-MM-YYYY HH:mm');
                    const formatDateYear = date.format('YYYY-MM-DD HH-mm');
                    const passedDate = date.isBefore(now) && !todo.complete;

                    // if (listTodo.find(`li[data-id="${todo._id}"]`).length === 0) {
                    const todoTable = `
                    <li class="list-group-item border-0 rounded d-flex flex-md-row my-2 justify-content-between align-items-center position-relative ${todo.complete ? "bg-success-subtle text-success-emphasis" : passedDate ? "bg-danger-subtle text-danger-emphasis" : "bg-secondary-subtle text-secondary-emphasis"
                        }" data-id="${todo._id}">
                    <p class="fw-medium h-center text-start mb-md-0">${formatDate} ${todo.title}</p>
                    <div class="d-flex gap-2">
                        <button class="btn btn-sm me-2 ${todo.complete ? "text-success-emphasis" : passedDate ? "text-danger-emphasis" : "text-secondary-emphasis"}"
                         data-bs-toggle="modal" data-bs-target="#form-Modal" data-id="${todo._id}" data-title="${todo.title}" data-deadline="${formatDateYear}" data-complete="${todo.complete}"
                             data-action="edit"><i class="fa-solid fa-pen "></i></button>
                        <button class="btn btn-sm ${todo.complete ? "text-success-emphasis" : passedDate ? "text-danger-emphasis" : "text-secondary-emphasis"}" 
                        data-bs-toggle="modal" data-bs-target="#form-Modal" data-id="${todo._id}" data-title="${todo.title}" data-action="delete"><i class="fa-solid fa-trash"></i></button>
                        </div>
                        </li>
                        `;
                    listTodo.append(todoTable);
                });
                renderData = false;
            })
        };

        const addTodo = async (title, executor) => {
            $.ajax({
                url: endpointApi,
                method: "POST",
                contentType: "application/json",
                data: JSON.stringify({ title, executor }),
                success: () => {
                    console.log(title);
                    params.page = 1;
                    renderTodos();
                },
                error: (error) => {
                    console.log(`Failed to add todo: ${error}`);
                }
            })
        };

        // DOCUMENT TODO 
        $(document).ready(() => {
            addButton.on('click', () => {
                const title = addTitle.val().trim();
                const executor = params.executor;
                if (title) {
                    addTodo(title, executor);
                    addTitle.val('');
                }
            });

            searchButton.on('click', () => {
                params.title = searchtitle.val() || '';
                params.complete = searchcomplete.val() || '';
                params.startDeadline = deadlineStart.val() || '';
                params.endDateDeadline = deadlineEnd.val() || '';
                console.log('endDateLine', params.endDateDeadline);
                params.page = 1;
                viewData = true;
                console.log(`Params: ${JSON.stringify(params, null, 2)}`);
                renderTodos();

            })

            sortButton.on('click', () => {
                console.log(`Sort by deadline`);
                params.sortBy = 'deadline';
                params.sortMode = params.sortMode === 'asc' ? 'desc' : 'asc';
                params.page = 1;
                if (params.sortMode === 'asc') {
                    sortButton.html('<i class="fa-solid fa-sort-up me-2"></i>Sort by deadline');
                } else {
                    sortButton.html('<i class="fa-solid fa-sort-down me-2"></i>Sort by deadline');
                }
                console.log(`Params: ${JSON.stringify(params, null, 2)}`);
                renderTodos();
            })

            resetButton.on('click', () => {
                searchtitle.val('');
                searchcomplete.prop('selectedIndex', 0);
                deadlineStart.val('');
                deadlineEnd.val('');
                params.title = '';
                params.complete = '';
                params.startDeadline = '';
                params.endDateDeadline = '';
                params.page = 1;
                viewData = true;
                if (!params.sortBy !== '_id') {
                    params.sortBy = '_id';
                    params.sortMode = 'desc';
                    sortButton.html('<i class="fa-solid fa-sort me-2"></i>Sort by deadline');
                }
                console.log(`Params: ${JSON.stringify(params, null, 2)}`);
                renderTodos();
            })


            // update and delete
            modalContent.on('click', () => {
                const id = $('#todoForm').val();
                const action = modalContent.data('action');

                if (action === 'edit') {
                    const title = $('#title').val();
                    const deadline = moment($('#deadline').val()).toISOString();
                    const complete = $('#complete').prop('checked');
                    $.ajax({
                        url: `/todos/${id}`,
                        method: "PUT",
                        contentType: "application/json",
                        data: JSON.stringify({ title, deadline, complete }),
                        success: (data) => {
                            params.page = 1;
                            renderTodos();
                            todoModal.hide();
                            console.log(`complete: ${complete},`);
                        },
                        error: (error) => {
                            console.log(`Failed to update todo: ${error}`);
                        }
                    })
                }
                if (action === 'delete') {
                    $.ajax({
                        url: `/todos/${id}`,
                        method: "DELETE",
                        success: (data) => {
                            params.page = 1;
                            renderTodos();
                            todoModal.hide();
                            console.log(data);
                        },
                        error: (error) => {
                            console.log(`Failed to delete todo: ${error}`);
                        }
                    })
                }
            });

            // edit document
            $('#form-Modal').on('show.bs.modal', (event) => {
                const button = $(event.relatedTarget);
                const action = button.data('action');
                const id = button.data('id');
                const title = button.data('title');
                const deadlineTodo = button.data('deadline');
                const complete = button.data('complete');
                const formattedDeadline = moment(deadlineTodo, 'YYYY-MM-DD HH-mm').format('YYYY-MM-DDTHH:mm');
                console.log(``);

                if (action === 'edit') {
                    $('#todos-edit').removeClass('d-none');
                    $('#todos-delete').addClass('d-none');
                    $('#todoForm').val(id);
                    $('#title').val(title);
                    $('#deadline').val(formattedDeadline);
                    $('#complete').prop('checked', complete === true);
                    modalContent.data('action', 'edit');
                } else if (action === 'delete') {
                    $('#todos-edit').addClass('d-none');
                    $('#todos-delete').removeClass('d-none');
                    $('#todoForm').val(id);
                    $('#deleteTodo').text(`'${title}'`);
                    $('#modalcontent').text('Yes').data('action', 'delete');

                    console.log(`title: ${title}, id: ${id}, action: ${action}, deleteTodo: ${deleteTodo}`);

                }
            });

            $(window).on('scroll', () => {
                if ($(window).scrollTop() + $(window).height() >= $(document).height() - 100) {
                    if (!renderData && viewData) {
                        renderData = true;
                        params.page += 1;
                        renderTodos(true);
                    }
                }
            });

            // Menangkap tombol Enter pada input addTitle
            addTitle.on('keydown', (event) => {
                if (event.key === 'Enter') {
                    event.preventDefault(); // Mencegah submit form default
                    const title = addTitle.val().trim();
                    const executor = params.executor;
                    if (title) {
                        addTodo(title, executor);
                        addTitle.val('');
                    }
                }
            });

            searchtitle.on('keydown', (event) => {
                if (event.key === 'Enter') {
                    event.preventDefault(); // Mencegah submit form default
                    params.title = searchtitle.val() || '';
                    params.complete = searchcomplete.val() || '';
                    params.startDeadline = deadlineStart.val() || '';
                    params.endDateDeadline = deadlineEnd.val() || '';
                    params.page = 1;
                    viewData = true;
                    console.log(`Params: ${JSON.stringify(params, null, 2)}`);
                    renderTodos();
                }
            });
            renderTodos();
        });

    </script>
    <%- include('partial/footer.ejs') %>